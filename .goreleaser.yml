before:
  hooks:
    # You may remove this if you don't use go modules.
    #- go mod download
    # you may remove this if you don't need go generate
    #- go generate ./...
    #- make validate
#
#
#  BUILDS
#
#
builds:
  - id: linux-newrelic-infra
    main: ./cmd/newrelic-infra
    binary: newrelic-infra
    env:
    - CGO_ENABLED=0
    goos:
    - linux
    ldflags:
    - -s -w -X main.integrationVersion={{.Version}}
    goarch:
    - amd64
#    - arm
#    - arm64
#    - 386
#    - mips
#    - mips64
#    - mipsle
#    - mips64le
#    - ppc64le
#    - s390x
  - id: linux-newrelic-infra-ctl-linux
    main: ./cmd/newrelic-infra-ctl
    binary: newrelic-infra-ctl
    env:
    - CGO_ENABLED=0
    goos:
    - linux
    ldflags:
    - -s -w -X main.integrationVersion={{.Version}}
    goarch:
    - amd64
#    - arm
#    - arm64
#    - 386
#    - mips
#    - mips64
#    - mipsle
#    - mips64le
#    - ppc64le
#    - s390x
  - id: linux-newrelic-infra-service
    main: ./cmd/newrelic-infra-service
    binary: newrelic-infra-service
    env:
    - CGO_ENABLED=0
    goos:
    - linux
    ldflags:
    - -s -w -X main.version={{.Version}}
    - -s -w -X main.commit={{.Commit}}
    goarch:
    - amd64
#    - arm
#    - arm64
#    - 386
#    - mips
#    - mips64
#    - mipsle
#    - mips64le
#    - ppc64le
#    - s390x
#
  - id: windows-newrelic-infra
    main: ./cmd/newrelic-infra
    binary: newrelic-infra
    env:
    - CGO_ENABLED=0
    goos:
    - windows
    ldflags:
    - -s -w -X main.integrationVersion={{.Version}}
    goarch:
    - amd64
#    - arm
#    - arm64
#    - 386
#    - mips
#    - mips64
#    - mipsle
#    - mips64le
#    - ppc64le
#    - s390x
  - id: windows-newrelic-infra-ctl-linux
    main: ./cmd/newrelic-infra-ctl
    binary: newrelic-infra-ctl
    env:
    - CGO_ENABLED=0
    goos:
    - windows
    ldflags:
    - -s -w -X main.integrationVersion={{.Version}}
    goarch:
    - amd64
#    - arm
#    - arm64
#    - 386
#    - mips
#    - mips64
#    - mipsle
#    - mips64le
#    - ppc64le
#    - s390x
  - id: windows-newrelic-infra-service
    main: ./cmd/newrelic-infra-service
    binary: newrelic-infra-service
    env:
    - CGO_ENABLED=0
    goos:
    - windows
    ldflags:
    - -s -w -X main.version={{.Version}}
    - -s -w -X main.commit={{.Commit}}
    goarch:
    - amd64
#    - arm
#    - arm64
#    - 386
#    - mips
#    - mips64
#    - mipsle
#    - mips64le
#    - ppc64le
#    - s390x
#

#
#  ARCHIVES
#
#
archives:
    ######## LINUX ########
  - id: linux-newrelic-infra
    builds:
      - linux-newrelic-infra
      - linux-newrelic-infra-ctl
      - linux-newrelic-infra-service
    name_template: "newrelic-infra_{{.Os}}_{{ .Env.TAG }}_{{ .Arch }}"
    wrap_in_directory: true
    format: tar.gz
    files:
    - LICENSE
    - build/package/binaries/linux/**/*

    ######## WINDOWS ########
  - id: windows-newrelic-infra
    builds:
      - windows-newrelic-infra
      - windows-newrelic-infra-ctl
      - windows-newrelic-infra-service
    name_template: "newrelic-infra-{{ .Arch }}.{{ .Version }}"
    wrap_in_directory: true
    format: zip
    files:
    - LICENSE
    - installer.ps1

checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  filters:
    exclude:
    - '^docs:'
    - '^test:'
#
#
#  NFPMS
#
#
nfpms:
  ######## SYSTEMD ########
  - id: newrelic-infra_systemd
    builds:
      - newrelic-infra
      - newrelic-infra-ctl
      - newrelic-infra-service
    file_name_template: "newrelic-infra_systemd_{{ .Env.TAG }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    vendor: "New Relic, Inc."
    homepage: "https://docs.newrelic.com/docs/release-notes/infrastructure-release-notes/infrastructure-agent-release-notes/new-relic-infrastructure-agent-197"
    maintainer: "caos-team@newrelic.com"
    description: "New Relic Infrastructure provides flexible, dynamic server monitoring. With real-time data collection and a UI that scales from a handful of hosts to thousands, Infrastructure is designed for modern Operations teams with fast-changing systems."
    license: "Copyright (c) 2008-2020 New Relic, Inc. All rights reserved."
    # Formats to be generated.
    formats:
      - deb
      - rpm
    # Override default /usr/local/bin destination for binaries
    bindir: /usr/bin
    files:
       '/tmp/binaries/nri-docker/etc/newrelic-infra/integrations.d/docker-config.yml': '/etc/newrelic-infra/integrations.d/docker-config.yml'
       'build/package/systemd/newrelic-infra.service': '/etc/systemd/system/newrelic-infra.service'
       '/tmp/binaries/nri-docker/var/db/newrelic-infra/newrelic-integrations/bin/nri-docker': '/var/db/newrelic-infra/newrelic-integrations/bin/nri-docker'
    empty_folders:
      - /var/db/newrelic-infra/custom-integrations
      - /var/db/newrelic-infra/integrations.d
      - /var/log/newrelic-infra
      - /var/run/newrelic-infra
    overrides:
      rpm:
        replacements:
          amd64: x86_64 # Exceptions in the name, .deb are amd64, .rpm are x86_64

    ######## UPSTART ########
  - id: newrelic-infra_upstart
    builds:
      - newrelic-infra
      - newrelic-infra-ctl
      - newrelic-infra-service
    file_name_template: "newrelic-infra_upstart_{{ .Env.TAG }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    vendor: "New Relic, Inc."
    homepage: "https://docs.newrelic.com/docs/release-notes/infrastructure-release-notes/infrastructure-agent-release-notes/new-relic-infrastructure-agent-197"
    maintainer: "caos-team@newrelic.com"
    description: "New Relic Infrastructure provides flexible, dynamic server monitoring. With real-time data collection and a UI that scales from a handful of hosts to thousands, Infrastructure is designed for modern Operations teams with fast-changing systems."
    license: "Copyright (c) 2008-2020 New Relic, Inc. All rights reserved."
    # Formats to be generated.
    formats:
      - deb
      - rpm
    # Override default /usr/local/bin destination for binaries
    bindir: /usr/bin
    files:
       'build/package/upstart/newrelic-infra': '/etc/init.d/newrelic-infra'
       #'build/package/upstart/newrelic-infra': '/lib/init/upstart-job'    #############################goreleaser do not allow to repeat same source. So how do I create the sym link??????
       '/tmp/binaries/nri-docker/etc/newrelic-infra/integrations.d/docker-config.yml': '/etc/newrelic-infra/integrations.d/docker-config.yml'
       '/tmp/binaries/nri-docker/var/db/newrelic-infra/newrelic-integrations/bin/nri-docker': '/var/db/newrelic-infra/newrelic-integrations/bin/nri-docker'
    empty_folders:
      - /var/db/newrelic-infra/custom-integrations
      - /var/db/newrelic-infra/integrations.d
      - /var/log/newrelic-infra
      - /var/run/newrelic-infra
    overrides:
      rpm:
        replacements:
          amd64: x86_64 # Exceptions in the name, .deb are amd64, .rpm are x86_64

  ######## SYSV ########
  - id: newrelic-infra_sysv
    builds:
      - newrelic-infra
      - newrelic-infra-ctl
      - newrelic-infra-service
    file_name_template: "newrelic-infra_sysv_{{ .Env.TAG }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    vendor: 'New Relic, Inc.'
    homepage: 'https://docs.newrelic.com/docs/release-notes/infrastructure-release-notes/infrastructure-agent-release-notes/new-relic-infrastructure-agent-197'
    maintainer: 'caos-team@newrelic.com'
    description: 'New Relic Infrastructure provides flexible, dynamic server monitoring. With real-time data collection and a UI that scales from a handful of hosts to thousands, Infrastructure is designed for modern Operations teams with fast-changing systems.'
    license: 'Copyright (c) 2008-2020 New Relic, Inc. All rights reserved.'
    # Formats to be generated.
    formats:
      - deb
      - rpm
    # Override default /usr/local/bin destination for binaries
    bindir: /usr/bin
    files:
       '/tmp/binaries/nri-docker/etc/newrelic-infra/integrations.d/docker-config.yml': '/etc/newrelic-infra/integrations.d/docker-config.yml'
       '/tmp/binaries/nri-docker/var/db/newrelic-infra/newrelic-integrations/bin/nri-docker': '/var/db/newrelic-infra/newrelic-integrations/bin/nri-docker'
       'build/package/sysv/deb/newrelic-infra': '/etc/init.d/newrelic-infra' # Has overwrites above
    empty_folders:
      - /var/db/newrelic-infra/custom-integrations
      - /var/db/newrelic-infra/integrations.d
      - /var/log/newrelic-infra
      - /var/run/newrelic-infra
    overrides:
      rpm:
        replacements:
          amd64: x86_64 # Exceptions in the name, .deb are amd64, .rpm are x86_64
        files:
          'build/package/sysv/deb/newrelic-infra': '/etc/init.d/newrelic-infra'   ##### Ned to know how add different files depending on OS ###########################################################


release:
  prerelease: true

signs:
  - artifacts: checksum
    cmd: gpg2
    args: ["--batch", '-u', "{{ .Env.GPG_APT_MAIL }}", "--passphrase", "{{ .Env.GPG_APT_PASSPHRASE }}", "--pinentry-mode", "loopback", "--output", "${signature}", "--detach-sign", "${artifact}"]
